#!/usr/bin/env ampl
# test.mod dat file generator
option randseed 0;
param n integer, > 1, default 20;
param m integer, > 1, default 12;
set N := 1..n;
set M := 1..m;
param c{N};
param A{M,N};
param b{M};
param xbar{N};

# make a feasible instance
let {j in N} c[j] := Uniform(-1,1);
let {i in M, j in N} A[i,j] := Uniform(0,1);
let {j in N} xbar[j] := Uniform(0,1);
let {i in M} b[i] := sum{j in N} A[i,j]*xbar[j];

# output
printf "# test.dat generated by testgen.run\n" > test.dat;
printf "param n := %d;", n >> test.dat;
printf "param m := %d;", m >> test.dat;
printf "param c :=\n" >> test.dat;
for {j in N} {
  printf " %d  %g\n", j, c[j] >> test.dat;
}
printf ";\n" >> test.dat;
printf "param b :=\n" >> test.dat;
for {i in M} {
  printf " %d  %g\n", i, b[i] >> test.dat;
}
printf ";\n" >> test.dat;
printf "param A :=\n" >> test.dat;
for {i in M, j in N} {
  printf " %d %d  %g\n", i, j, A[i,j] >> test.dat;
}
printf ";\n" >> test.dat;

